
==================== FINAL INTERFACE ====================
2016-08-26 04:56:14.173449 UTC

interface addit_9qN1Z8TzQ8ZCIvgZr4Itol:Addition 7103
  interface hash: ec11d645a9c32b1ebcb6f84992d26620
  ABI hash: a79a911e9c85829fe10b8dec316293d3
  export-list hash: 7eb54375001ff7f69007fd7c7383f1d9
  orphan hash: 2b576b1522b84f8c4aac2377c8866f36
  flag hash: a2d7b065a839570befe3f8e33c9ff07b
  sig of: Nothing
  used TH splices: False
  where
exports:
  Addition.dividedBy
  Addition.genBool
  Addition.genBool'
  Addition.genChar
  Addition.genOrdering
  Addition.main
  Addition.myMult
  Addition.oneThroughThree
module dependencies:
package dependencies: primitive-0.6.1.0@4YeeGvBMtRnAzsdkC5kA7O
                      tf-random-0.5@5zCsXs0TVAeD2Al9Cx0EVM
                      HUnit-1.3.1.1@HUnit_7IPmJa5HmrxHl6ny5upchm
                      random-1.1@IQxsFMAJSrCF7cHNxD7bSI
                      QuickCheck-2.8.1@KM7QmXATqfK2YvrX8fG5xW
                      ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      async-2.1.0@async_KuqnF1GrhHK5nNp6Zzm3jy base-4.8.2.0
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      hspec-core-2.2.2@hspec_4HWfYQG3C4bFLVXW2nSIXl
                      hspec-expectations-0.7.2@hspec_EI4zRR5iBcZEoRZjsgGwGV
                      hspec-2.2.2@hspec_GUxg0Pv0Wlt4jXJKWBWDCu integer-gmp-1.0.0.0
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      quickcheck-io-0.1.2@quick_AP4feM5P1PR39baqB9Fp3n
                      setenv-0.1.1.3@seten_6IUqFDI6NejGrNz9ulqEjc
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD template-haskell-2.10.0.0
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         quickcheck-io-0.1.2@quick_AP4feM5P1PR39baqB9Fp3n:Test.QuickCheck.IO
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: primitive-0.6.1.0@4YeeGvBMtRnAzsdkC5kA7O:Control.Monad.Primitive
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         hspec-core-2.2.2@hspec_4HWfYQG3C4bFLVXW2nSIXl:Test.Hspec.Core.Example
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
import  -/  QuickCheck-2.8.1@KM7QmXATqfK2YvrX8fG5xW:Test.QuickCheck 21dc956deff038e828e7e58ac303cdac
import  -/  QuickCheck-2.8.1@KM7QmXATqfK2YvrX8fG5xW:Test.QuickCheck.Gen 0632633fc51ce61a757ec436dfff0acf
import  -/  QuickCheck-2.8.1@KM7QmXATqfK2YvrX8fG5xW:Test.QuickCheck.Property e02977a0bbf1ea9b7bff01f85d75e87c
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  hspec-core-2.2.2@hspec_4HWfYQG3C4bFLVXW2nSIXl:Test.Hspec.Core.Runner e4c557de6ffca38e51a826d7adc7115c
import  -/  hspec-core-2.2.2@hspec_4HWfYQG3C4bFLVXW2nSIXl:Test.Hspec.Core.Spec 7bd43e0eb2f2b2fc54e6248808f901bf
import  -/  hspec-expectations-0.7.2@hspec_EI4zRR5iBcZEoRZjsgGwGV:Test.Hspec.Expectations 7b0988a5040d4abb76b6bb580603b6ac
import  -/  hspec-2.2.2@hspec_GUxg0Pv0Wlt4jXJKWBWDCu:Test.Hspec 7f0bd7062ed77a9df9ae050efbbc754c
efdf7f9c4155360757b7b516ef6bbe99
  $s$fEq(,) ::
    GHC.Classes.Eq (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Integer.Type.Integer
                     @ GHC.Integer.Type.Integer
                     GHC.Integer.Type.$fEqInteger
                     GHC.Integer.Type.$fEqInteger)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ GHC.Integer.Type.Integer
                     @ GHC.Integer.Type.Integer
                     GHC.Integer.Type.$fEqInteger
                     GHC.Integer.Type.$fEqInteger) -}
f4280fb27fb0b4d865cfffb4fb5909d0
  $s$fShow(,) ::
    GHC.Show.Show (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
                  (GHC.Show.$fShow(,)_$cshowsPrec
                     @ GHC.Integer.Type.Integer
                     @ GHC.Integer.Type.Integer
                     GHC.Show.$fShowInteger
                     GHC.Show.$fShowInteger)
                  Addition.$s$fShow(,)_$s$fShow(,)_$cshow
                  Addition.$s$fShow(,)_$s$fShow(,)_$cshowList -}
a69132b1b66099f88db49993cbd08952
  $s$fShow(,)_$s$fShow(,)_$cshow ::
    (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
    -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ x :: (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer) ->
                 GHC.Show.$fShow(,)_$cshowsPrec
                   @ GHC.Integer.Type.Integer
                   @ GHC.Integer.Type.Integer
                   GHC.Show.$fShowInteger
                   GHC.Show.$fShowInteger
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
64bba11ad631fc4642886b18294cd5b1
  $s$fShow(,)_$s$fShow(,)_$cshowList ::
    [(GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: [(GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)]
                   eta1 :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ GHC.Integer.Type.Integer
                      @ GHC.Integer.Type.Integer
                      GHC.Show.$fShowInteger
                      GHC.Show.$fShowInteger
                      GHC.Show.shows18)
                   eta
                   eta1) -}
45a2148829f06737edd15ca16a994e5a
  $wa :: Test.QuickCheck.Random.QCGen -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ w :: Test.QuickCheck.Random.QCGen ->
                 case System.Random.$wrandomIvalInteger
                        @ Test.QuickCheck.Random.QCGen
                        @ GHC.Types.Int
                        Test.QuickCheck.Random.$fRandomGenQCGen
                        GHC.Num.$fNumInt
                        System.Random.getStdRandom4
                        System.Random.$fRandomBool3
                        w of ww2 { (#,#) ww3 ww4 ->
                 case ww3 of wild2 { GHC.Types.I# ds ->
                 case ds of ds1 {
                   DEFAULT -> GHC.Types.True 0 -> GHC.Types.False } } }) -}
c02ce9de115f04e630c0dade453616ec
  $wdividedBy :: GHC.Real.Integral a => a -> a -> (# a, a #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A)><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a w :: GHC.Real.Integral a w1 :: a w2 :: a ->
                 let {
                   $dReal :: GHC.Real.Real a = GHC.Real.$p1Integral @ a w
                 } in
                 let {
                   $dNum :: GHC.Num.Num a = GHC.Real.$p1Real @ a $dReal
                 } in
                 let {
                   lvl8 :: a = GHC.Num.fromInteger @ a $dNum Addition.dividedBy2
                 } in
                 let {
                   $dOrd :: GHC.Classes.Ord a = GHC.Real.$p2Real @ a $dReal
                 } in
                 letrec {
                   $wgo1 :: a -> a -> a -> (# a, a #)
                     {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
                   = \ w3 :: a w4 :: a w5 :: a ->
                     case GHC.Classes.< @ a $dOrd w3 w4 of wild {
                       GHC.Types.False
                       -> $wgo1
                            (GHC.Num.- @ a $dNum w3 w4)
                            w4
                            (GHC.Num.+ @ a $dNum w5 lvl8)
                       GHC.Types.True -> (# w5, w3 #) }
                 } in
                 $wgo1 w1 w2 (GHC.Num.fromInteger @ a $dNum Addition.dividedBy1)) -}
978a852f41ed78aae275fb2f65de25db
  $wgo ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> (# GHC.Integer.Type.Integer, GHC.Integer.Type.Integer #)
  {- Arity: 3, Strictness: <S,U><S,U><L,U>, Inline: [0] -}
1397dbe71f904ddaef0a1dc04b0eb41e
  dividedBy :: GHC.Real.Integral a => a -> a -> (a, a)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A)><L,U><L,U>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a w :: GHC.Real.Integral a w1 :: a w2 :: a ->
                 case Addition.$wdividedBy @ a w w1 w2 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
90619bc2e2b48b1f7c229cba66ac2216
  dividedBy1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 0) -}
293b9b4875a32820a7a064f96b66ebbd
  dividedBy2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 1) -}
1a21ac3180dc40e11682f13fdd149b9e
  genBool :: Test.QuickCheck.Gen.Gen GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,A>,
     Unfolding: InlineRule (0, True, True)
                Addition.genBool1
                  `cast`
                (Sym (Test.QuickCheck.Gen.NTCo:Gen[0] <GHC.Types.Bool>_R)) -}
747fd1e6149ad0ba7b825a70e4cd4083
  genBool' :: Test.QuickCheck.Gen.Gen GHC.Types.Bool
  {- Unfolding: (Test.QuickCheck.Gen.elements
                   @ GHC.Types.Bool
                   Addition.genBool'1) -}
9e45e0bc9ad364713bc03978ecdf51dc
  genBool'1 :: [GHC.Types.Bool]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Bool
                   GHC.Types.False
                   Addition.genBool'2) -}
a04cecde714c1116b28f900f5d415a5d
  genBool'2 :: [GHC.Types.Bool]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Bool
                   GHC.Types.True
                   (GHC.Types.[] @ GHC.Types.Bool)) -}
7b46361bcfe878617f24357265eb605f
  genBool1 ::
    Test.QuickCheck.Random.QCGen -> GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,A>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ w :: Test.QuickCheck.Random.QCGen w1 :: GHC.Types.Int ->
                 Addition.$wa w) -}
1577ea95f1c9e25ee7573c12a59e0ddd
  genChar :: Test.QuickCheck.Gen.Gen GHC.Types.Char
  {- Unfolding: (Test.QuickCheck.Gen.elements
                   @ GHC.Types.Char
                   Addition.genChar1) -}
f87901c81512622767206459fdd3486a
  genChar1 :: GHC.Base.String
  {- Unfolding: (GHC.Enum.eftChar 97 122) -}
ada944564498d0131eed49b1a48cfd23
  genOrdering :: Test.QuickCheck.Gen.Gen GHC.Types.Ordering
  {- Unfolding: (Test.QuickCheck.Gen.elements
                   @ GHC.Types.Ordering
                   Addition.genOrdering1) -}
a03d208a6ac2ecde88cb5705166e1b79
  genOrdering1 :: [GHC.Types.Ordering]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Ordering
                   GHC.Types.LT
                   Addition.genOrdering2) -}
15ae7920bdb27e981b01bee8f759d651
  genOrdering2 :: [GHC.Types.Ordering]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Ordering
                   GHC.Types.EQ
                   Addition.genOrdering3) -}
d6089ed81c51b1426f051bfe81592b43
  genOrdering3 :: [GHC.Types.Ordering]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Ordering
                   GHC.Types.GT
                   (GHC.Types.[] @ GHC.Types.Ordering)) -}
21b9e89a327e9870deaf3fe264898062
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Addition.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
2407299f768339fb2d5cb832592a65e6
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Test.Hspec.Options.defaultConfig
                        Addition.main2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.NTCo:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.NTCo:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.NTCo:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0 -> (# ipv, GHC.Tuple.() #) } } } }) -}
2364e76894b8e2d05c49013b9978a8a9
  main10 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int -> Test.QuickCheck.Property.Prop
  {- Arity: 2,
     Unfolding: (\ eta :: Test.QuickCheck.Random.QCGen
                   eta1 :: GHC.Types.Int ->
                 let {
                   ds1 :: (System.Random.TF.Gen.TFGen, System.Random.TF.Gen.TFGen)
                   = case eta
                            `cast`
                          (Test.QuickCheck.Random.NTCo:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                     case System.Random.TF.Gen.$wtfGenSplit
                            ww1
                            ww2
                            ww3
                            ww4 of ww7 { (#,#) ww8 ww9 ->
                     (ww8, ww9) } }
                 } in
                 (Test.QuickCheck.Property.$fTestable(->)3
                    @ GHC.Types.Int
                    @ Test.QuickCheck.Property.Property
                    Test.QuickCheck.Property.$fTestableProperty
                    Test.QuickCheck.Arbitrary.$fArbitraryInt_$sshrinkIntegral
                    (case eta1 of ww { GHC.Types.I# ww1 ->
                     case Test.QuickCheck.Arbitrary.$wa6
                            (case ds1 of wild { (,) g1 g2 ->
                             g1 `cast` (Sym (Test.QuickCheck.Random.NTCo:QCGen[0])) })
                            ww1 of ww2 { DEFAULT ->
                     GHC.Types.I# ww2 } })
                    Addition.main11)
                   `cast`
                 (Test.QuickCheck.Gen.NTCo:Gen[0] <Test.QuickCheck.Property.Prop>_R)
                   (case ds1 of wild { (,) g1 g2 ->
                    g2 `cast` (Sym (Test.QuickCheck.Random.NTCo:QCGen[0])) })
                   eta1) -}
39fe4429a665d185c52b1a6c2755b641
  main100 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Addition.main24
                   Addition.main23
                   Addition.main22
                   Addition.main101
                   Addition.main20
                   Addition.main101
                   Addition.main19) -}
ef7c4a2b04f1d73d0d676d0159d34f14
  main101 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 41) -}
5204a8788a2de971cf61e963e87ab170
  main102 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Addition.main103
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
dcc9609acf2d96fff4ccd12189ce7747
  main103 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Addition.main115
                   Addition.main114
                   Addition.main104 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
c451b7b8a22805806a20a782fc90dd9f
  main104 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
                   Addition.main109
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Addition.$s$fShow(,)
                   Addition.$s$fEq(,)
                   Addition.main106
                   Addition.main105) -}
845ec46b4b843bdf3c981c1bc5efe40f
  main105 :: (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
  {- HasNoCafRefs,
     Unfolding: ((Addition.main60, Addition.dividedBy1)) -}
8bdebd93dd656e093359e7916c5020f1
  main106 :: (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
  {- Unfolding: (case Addition.$wgo
                        Addition.main108
                        Addition.main107
                        Addition.dividedBy1 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
a67e28ff6d67d10e143f21d38c7e590e
  main107 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 3) -}
b6110e8f81f98a369f2901c255f303b7
  main108 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 15) -}
c2c6b54719b0759f095eb1d221a66e11
  main109 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Addition.main110) -}
13452035ed70f30c5e7417d53c6e8cc1
  main11 :: GHC.Types.Int -> Test.QuickCheck.Property.Property
  {- Arity: 1,
     Unfolding: (\ x' :: GHC.Types.Int ->
                 Test.QuickCheck.Property.counterexample_$scounterexample1
                   (case x' of ww2 { GHC.Types.I# ww3 ->
                    case GHC.Show.$wshowSignedInt
                           0
                           ww3
                           (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                    GHC.Types.: @ GHC.Types.Char ww5 ww6 } })
                   (case x' of wild { GHC.Types.I# x ->
                    GHC.Prim.tagToEnum#
                      @ GHC.Types.Bool
                      (GHC.Prim.># (GHC.Prim.+# x 1) x) })) -}
c64245ba6e6a8ee9ebc42ded0b432216
  main110 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Addition.main111
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
60f2e7e5dbf2253d0d56e1a44c41a6ed
  main111 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Addition.main46, Addition.main112)) -}
d58dd799530644ac3e57ce3a3288984c
  main112 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Addition.main24
                   Addition.main23
                   Addition.main22
                   Addition.main113
                   Addition.main92
                   Addition.main113
                   Addition.main91) -}
9972c84986e0abef2993fba8834b2b4a
  main113 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 40) -}
51baf20a91c28df73962cc4938650898
  main114 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "15 divided by 3 is 5"#) -}
2213f2439c66801ccec2555701af34a4
  main115 ::
    GHC.Base.String
    -> Test.Hspec.Expectations.Expectation
    -> Test.Hspec.Core.Tree.SpecTree
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.specItem
                   @ Test.Hspec.Expectations.Expectation
                   Addition.main116
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Sub (Test.Hspec.Core.Example.TFCo:R:Arg(->)0[0]
                                         (Sym (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.NTCo:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))) -}
e4b2ce43fa166441c82ee970507093fe
  main116 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Addition.main117) -}
b40d5fae41fc377e3112e3c3daad8db8
  main117 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.Hspec.Core.Spec.it2
                   Addition.main118) -}
8bf4f31713df163e3c604ee28f1f87d5
  main118 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Addition.main119
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
6749de3e82149fb5cd66eeeccabbf90e
  main119 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Addition.main25, Addition.main120)) -}
80e17cec4dc0d9aa61a7e20b42f4745c
  main12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "x + 1 is always greater than x"#) -}
f5065ac481916f1c73955ad2f3c7666d
  main120 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Addition.main24
                   Addition.main23
                   Addition.main22
                   Addition.main121
                   Addition.main20
                   Addition.main121
                   Addition.main19) -}
1813ece77455b0cb8441d651b1112630
  main121 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 39) -}
bd3d4787421b9f0cd399c7fa6120b8f1
  main122 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Addition.main124
                   Addition.main123) -}
b620a6b44751cc075bc6288ce080e768
  main123 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ividedBy"#) -}
f084a00f53fd05454546a0dca5035e32
  main124 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'd') -}
59b6d67479d14ebf9411f2d6a1525a2f
  main13 ::
    GHC.Base.String
    -> Test.QuickCheck.Property.Property
    -> Test.Hspec.Core.Tree.SpecTree
         (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Unfolding: (Test.Hspec.Core.Tree.specItem
                   @ Test.QuickCheck.Property.Property
                   Addition.main14
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Test.Hspec.Core.Example.$fExampleProperty1
                     `cast`
                   (Trans
                        (<Test.QuickCheck.Property.Property>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Sub (Test.Hspec.Core.Example.TFCo:R:Arg(->)[0]
                                         (Sym (Test.Hspec.Core.Example.TFCo:R:ArgProperty[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.NTCo:Example[0]
                                  <Test.QuickCheck.Property.Property>_N)))) -}
1d8829deaa682000a1319d0473b827d3
  main14 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Addition.main15) -}
20016b862a298341048651b135eb4749
  main15 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.Hspec.Core.Spec.it2
                   Addition.main16) -}
46e13e3efc6c78492374039606285cca
  main16 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Addition.main17
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
960b91d29bd3884c3ee81b18fa6dc581
  main17 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Addition.main25, Addition.main18)) -}
a46a5ad3e6ddf9e26b5b411022c64f5a
  main18 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Addition.main24
                   Addition.main23
                   Addition.main22
                   Addition.main21
                   Addition.main20
                   Addition.main21
                   Addition.main19) -}
302b103ad1e4e8a95f92de24adce88c6
  main19 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 7) -}
5853f21a7ee97df0912741b057ac2a81
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# s, Addition.main3 #)) -}
d49b2a7cc8f9614c199a3414c9e28ccd
  main20 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5) -}
9467a1d22f5cf1a41320b8148f06c265
  main21 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 49) -}
f4ed30f05e6b72e82d3d314abf65cb0e
  main22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Addition.hs"#) -}
d773711428b88a5a5637571fff7b5929
  main23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Addition"#) -}
528262f769c9f46cab32916dc6decc41
  main24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "addit_9qN1Z8TzQ8ZCIvgZr4Itol"#) -}
ae06146af26c18486678f8094d320b5c
  main25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
97186ed92895a614b311f6c5023be0d8
  main26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Addition.main28
                   Addition.main27) -}
d368a1de3a18f0236a3685a5ace8cca4
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "uickcheck test"#) -}
9495126317477e8c490011763ba416cf
  main28 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'q') -}
07a67306f5a47b25d2606bff4314106c
  main29 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Addition.main30
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
4c419c8d3c0746fa64b92a8d5a84e9d3
  main3 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- Unfolding: ((GHC.Tuple.(), Addition.main4)) -}
5ee0745681581fffc0add15031e66361
  main30 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Addition.main74
                   Addition.main31) -}
ff813d8bdc27ceb59c519a68a4da58b0
  main31 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Addition.main55
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))_R)_R])_R
                   Addition.main32
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))_R)_R])_R) -}
f708410dbf3d11c4b68d525fe5d1cba8
  main32 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Addition.main33
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
ca09f9cbbb5378462bd6bfdab642c43f
  main33 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Addition.main48
                   Addition.main47
                   Addition.main34 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
6942c9335b9c54a41fbb2ed0ab3bdc12
  main34 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ GHC.Integer.Type.Integer
                   Addition.main39
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Show.$fShowInteger
                   GHC.Integer.Type.$fEqInteger
                   Addition.main36
                   Addition.main35) -}
9bc62c811185d0bc6e1d0766079a3b84
  main35 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 28) -}
cb84c0095efb856b35c3fe41a8fc90e9
  main36 :: GHC.Integer.Type.Integer
  {- Unfolding: (Addition.main_$smyMult
                   Addition.main38
                   Addition.main37) -}
3d3cc0933060a2342b892f595b52c694
  main37 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 4) -}
1759d220a6238af84bc6e8eaf7a4446e
  main38 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 7) -}
df1442726c90c580730e19e6ee191472
  main39 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Addition.main40) -}
b7196eb06f7c7ce5a9cb7887ed959d84
  main4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Addition.main77
                   Addition.main5) -}
9b2bff4f834d6c9ac2abee5a79c1d988
  main40 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Addition.main41
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
7b534e7bf4aa1e2dbb98f40851497bf6
  main41 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Addition.main46, Addition.main42)) -}
98e46ff730aabe13fd96e9c5146ce958
  main42 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Addition.main24
                   Addition.main23
                   Addition.main22
                   Addition.main45
                   Addition.main44
                   Addition.main45
                   Addition.main43) -}
4e20fb65af58f8bc1332fdae66e83f92
  main43 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 28) -}
501ad799fd2c448866374b0b26153220
  main44 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 18) -}
28cb35b4f4455ee810ea4c67542febef
  main45 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 47) -}
1488fabfef010c45785c9ff823a2bc8a
  main46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
7edbcde28cb5d814dcfd36ee2b6c6bb4
  main47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "4 multiplied by 7 is 28"#) -}
1309396ba109077af942983b31d5ebf7
  main48 ::
    GHC.Base.String
    -> Test.Hspec.Expectations.Expectation
    -> Test.Hspec.Core.Tree.SpecTree
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.specItem
                   @ Test.Hspec.Expectations.Expectation
                   Addition.main49
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Sub (Test.Hspec.Core.Example.TFCo:R:Arg(->)0[0]
                                         (Sym (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.NTCo:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))) -}
cd5e6e67e2977cc02a146391c2e6f8ea
  main49 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Addition.main50) -}
36a8df0448f1ff050a32a45bfd6154d5
  main5 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Addition.main29
                   Addition.main6) -}
ff806637c18013e78e2ee9afd2572fd9
  main50 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.Hspec.Core.Spec.it2
                   Addition.main51) -}
706b889d9908275495d9c0ca3efa555a
  main51 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Addition.main52
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
bc5030e7e15f1f5cd356dc4b08a48b8a
  main52 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Addition.main25, Addition.main53)) -}
192e4bc9c440fe9918f662ddef2cce9c
  main53 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Addition.main24
                   Addition.main23
                   Addition.main22
                   Addition.main54
                   Addition.main20
                   Addition.main54
                   Addition.main19) -}
5af872e82295658dd08601fb33d813bc
  main54 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 46) -}
5c5be3a63e6185b0c6afae9d1c5356dc
  main55 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Addition.main56
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
cf6901a7c19e867b971c98f5b9a39198
  main56 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Addition.main67
                   Addition.main66
                   Addition.main57 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
68b2ce8a95745a8bd01565a1cdbe6df8
  main57 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ GHC.Integer.Type.Integer
                   Addition.main61
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   GHC.Show.$fShowInteger
                   GHC.Integer.Type.$fEqInteger
                   Addition.main59
                   Addition.main58) -}
5d07511223124816ab5c03401c5bf111
  main58 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 25) -}
902c3b992d08d11c4e41f58f0672afec
  main59 :: GHC.Integer.Type.Integer
  {- Unfolding: (Addition.main_$smyMult
                   Addition.main60
                   Addition.main60) -}
728bc8beaba54fd5e7e925d86f9964be
  main6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Addition.main7
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
ff2b51c595cc2f03da95f032db2effc1
  main60 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 5) -}
35fa5eb2c4e6120c379ace09d2409c0e
  main61 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Addition.main62) -}
23b67de9b7d33bf1e48d1b5a4795035a
  main62 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Addition.main63
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
f83cb8244da0a548304149157d6cfd91
  main63 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Addition.main46, Addition.main64)) -}
09d68c8d159db88f706f0521ea0f7148
  main64 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Addition.main24
                   Addition.main23
                   Addition.main22
                   Addition.main65
                   Addition.main44
                   Addition.main65
                   Addition.main43) -}
87ffbb64fa6b4c3895972f4ab7d22291
  main65 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 45) -}
cb2484a093bb53bf98c84d5f1b70c77d
  main66 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "5 multiplied by 5 is 25"#) -}
68b61bb198de08edfddd247a5f0cd2a2
  main67 ::
    GHC.Base.String
    -> Test.Hspec.Expectations.Expectation
    -> Test.Hspec.Core.Tree.SpecTree
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.specItem
                   @ Test.Hspec.Expectations.Expectation
                   Addition.main68
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Sub (Test.Hspec.Core.Example.TFCo:R:Arg(->)0[0]
                                         (Sym (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.NTCo:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))) -}
9a615138faf730dc8cb2f79f53fce4bc
  main68 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Addition.main69) -}
c7b380de707e88b078992e1252fb91d1
  main69 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.Hspec.Core.Spec.it2
                   Addition.main70) -}
41d63e4388195edc62158c767a73692a
  main7 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Addition.main26
                   Addition.main8
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.TFCo:R:ArgProperty[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.TFCo:R:ArgProperty[0])))_R)_R])_R) -}
d9e48b813ff72c93501fed6a1e61805d
  main70 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Addition.main71
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
c4fff046010381ff43dc5c087a6b456c
  main71 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Addition.main25, Addition.main72)) -}
14ce1031cb517a992adf009ef148a4a4
  main72 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Addition.main24
                   Addition.main23
                   Addition.main22
                   Addition.main73
                   Addition.main20
                   Addition.main73
                   Addition.main19) -}
ce532b47d467ecf021438e9c9f33c36e
  main73 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 44) -}
50a3c8322caa3745d8d3feb662f72835
  main74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Addition.main76
                   Addition.main75) -}
947b0c679ffce8184f6be4e1bd8524ea
  main75 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "yMult"#) -}
a95a0dabe3231d3801283f058abe08bb
  main76 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'm') -}
b1f236b8f8e1da33f66ff2c4c7cdb83c
  main77 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Addition.main78
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
66e922c53bd8f7276d2aa9b109baeb23
  main78 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Addition.main122
                   Addition.main79) -}
235f31e879c113a9a69d529a74f9f6d8
  main79 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Addition.main102
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))_R)_R])_R
                   Addition.main80
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))_R)_R])_R) -}
697b858f4e6cba33cf74eaba0f078376
  main8 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property))
                   Addition.main9
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.QuickCheck.Property.Property)))) -}
d6324d4fc1d6164b429dcd67077281ca
  main80 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Addition.main81
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
6ef08fdd3fe2c019d52eead629b0fb45
  main81 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Addition.main95
                   Addition.main94
                   Addition.main82 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
40380f47a746de2824f928bcf8001db5
  main82 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (Test.Hspec.Expectations.shouldBe1
                   @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
                   Addition.main87
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Addition.$s$fShow(,)
                   Addition.$s$fEq(,)
                   Addition.main85
                   Addition.main83) -}
64ceb6a833980d38cca665cff2230e67
  main83 :: (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
  {- HasNoCafRefs, Unfolding: ((Addition.main37, Addition.main84)) -}
531bc3ddbc29e92c3aca2ec1ea5e1640
  main84 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 2) -}
540928917e40cf9726d2f0116c2cc0fa
  main85 :: (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
  {- Unfolding: (case Addition.$wgo
                        Addition.main86
                        Addition.main60
                        Addition.dividedBy1 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
40e69de10cb708b2252e5ddb8ff41952
  main86 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 22) -}
1a907e6bd8c91dc342e81326556642ff
  main87 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Addition.main88) -}
7de0b3ad97862e8d3f16bcf8f6b6c127
  main88 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Addition.main89
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
540eaf1be4ced9666fd17fcf92fca1e8
  main89 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Addition.main46, Addition.main90)) -}
2781142b804fa5d94dae14cd7fd7775e
  main9 ::
    Test.Hspec.Core.Tree.SpecTree
      (Test.Hspec.Core.Example.Arg Test.QuickCheck.Property.Property)
  {- Unfolding: (Addition.main13
                   Addition.main12
                   Addition.main10
                     `cast`
                   (Trans
                        (Sym (Test.QuickCheck.Gen.NTCo:Gen[0]
                                  <Test.QuickCheck.Property.Prop>_R))
                        (Sym (Test.QuickCheck.Property.NTCo:Property[0])))) -}
cb47bb10cd6e1064854390161a5eda64
  main90 :: GHC.SrcLoc.SrcLoc
  {- Unfolding: (GHC.SrcLoc.SrcLoc
                   Addition.main24
                   Addition.main23
                   Addition.main22
                   Addition.main93
                   Addition.main92
                   Addition.main93
                   Addition.main91) -}
2522319b26a44c51e486689650bae8be
  main91 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 32) -}
9eb530afba4479428ffa5ef1c87ee1dc
  main92 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 22) -}
9434f9b457ceb32f6e258894fb161cc5
  main93 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 42) -}
26be088629056967d8e17a25ca0b4876
  main94 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "22 divided by 5 is 4 remainder 2"#) -}
3dbce0f8c91c97f393169459befb0697
  main95 ::
    GHC.Base.String
    -> Test.Hspec.Expectations.Expectation
    -> Test.Hspec.Core.Tree.SpecTree
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.specItem
                   @ Test.Hspec.Expectations.Expectation
                   Addition.main96
                     `cast`
                   (Sym (GHC.IP.NTCo:IP[0] <"loc">_N <GHC.Stack.CallStack>_N))
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Sub (Test.Hspec.Core.Example.TFCo:R:Arg(->)0[0]
                                         (Sym (Test.Hspec.Core.Example.TFCo:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.NTCo:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))) -}
935873299d436984e8ae74f83e3cfd9f
  main96 :: GHC.Stack.CallStack
  {- Unfolding: (GHC.Stack.CallStack Addition.main97) -}
e32c4582cf7d4e2a87787c4ccefcd26d
  main97 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Test.Hspec.Core.Spec.it2
                   Addition.main98) -}
f37661c016cd58738fb01762beceba92
  main98 :: [([GHC.Types.Char], GHC.SrcLoc.SrcLoc)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
                   Addition.main99
                   (GHC.Types.[] @ ([GHC.Types.Char], GHC.SrcLoc.SrcLoc))) -}
98d38b5f695c0a9e1abf086bcc43b137
  main99 :: ([GHC.Types.Char], GHC.SrcLoc.SrcLoc)
  {- Unfolding: ((Addition.main25, Addition.main100)) -}
2d35f5b4f8891588194ae07dab5f5477
  main_$smyMult ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <L,U><S,U> -}
7ab278198884f10331addb599fa5ade4
  myMult :: (GHC.Classes.Eq a, GHC.Num.Num a) => a -> a -> a
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(C(C(S))L),U(C(C1(U)),A)><S,U(C(C1(U)),C(C1(U)),A,A,A,A,C(U))><L,U><L,U> -}
bf981f6bd60395ba70a25f7571eda9c5
  oneThroughThree :: Test.QuickCheck.Gen.Gen GHC.Types.Int
  {- Unfolding: (Test.QuickCheck.Gen.elements
                   @ GHC.Types.Int
                   Addition.oneThroughThree1) -}
f995334dc42468e5d8419c63531cd5d3
  oneThroughThree1 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Addition.oneThroughThree6
                   Addition.oneThroughThree2) -}
e6e2b8c079d3edaa045cb0d7ef2f80bc
  oneThroughThree2 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Addition.oneThroughThree5
                   Addition.oneThroughThree3) -}
6f09a231c923804fd84396bcb8561eea
  oneThroughThree3 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Addition.oneThroughThree4
                   (GHC.Types.[] @ GHC.Types.Int)) -}
80a5e3e63d4a7ef2450bbf653de5bc13
  oneThroughThree4 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 3) -}
be5c63eb20b273be5780f545073ba340
  oneThroughThree5 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 2) -}
d1049758b41fb772697baf195fc327f6
  oneThroughThree6 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1) -}
"SPEC myMult @ Integer" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                  GHC.Integer.Type.Integer
                                        $dNum :: GHC.Num.Num GHC.Integer.Type.Integer
  Addition.myMult @ GHC.Integer.Type.Integer $dEq $dNum
  = Addition.main_$smyMult
"SPEC/Addition $fEq(,) @ Integer @ Integer" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                      GHC.Integer.Type.Integer
                                                            $dEq1 :: GHC.Classes.Eq
                                                                       GHC.Integer.Type.Integer
  GHC.Classes.$fEq(,) @ GHC.Integer.Type.Integer
                      @ GHC.Integer.Type.Integer
                      $dEq
                      $dEq1
  = Addition.$s$fEq(,)
"SPEC/Addition $fShow(,) @ Integer @ Integer" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                          GHC.Integer.Type.Integer
                                                              $dShow1 :: GHC.Show.Show
                                                                           GHC.Integer.Type.Integer
  GHC.Show.$fShow(,) @ GHC.Integer.Type.Integer
                     @ GHC.Integer.Type.Integer
                     $dShow
                     $dShow1
  = Addition.$s$fShow(,)
"SPEC/Addition $fShow(,)_$cshow @ Integer @ Integer" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                 GHC.Integer.Type.Integer
                                                                     $dShow1 :: GHC.Show.Show
                                                                                  GHC.Integer.Type.Integer
  GHC.Show.$fShow(,)_$cshow @ GHC.Integer.Type.Integer
                            @ GHC.Integer.Type.Integer
                            $dShow
                            $dShow1
  = Addition.$s$fShow(,)_$s$fShow(,)_$cshow
"SPEC/Addition $fShow(,)_$cshowList @ Integer @ Integer" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                     GHC.Integer.Type.Integer
                                                                         $dShow1 :: GHC.Show.Show
                                                                                      GHC.Integer.Type.Integer
  GHC.Show.$fShow(,)_$cshowList @ GHC.Integer.Type.Integer
                                @ GHC.Integer.Type.Integer
                                $dShow
                                $dShow1
  = Addition.$s$fShow(,)_$s$fShow(,)_$cshowList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

